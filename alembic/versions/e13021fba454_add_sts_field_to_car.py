"""add_sts_field_to_car

Revision ID: e13021fba454
Revises: 96606c91e336
Create Date: 2025-05-12 18:35:59.168911

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e13021fba454'
down_revision = '96606c91e336'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_driver_surveys_id', table_name='driver_surveys')
    op.drop_table('driver_surveys')
    op.drop_index('ix_driver_auth_id', table_name='driver_auth')
    op.drop_index('ix_driver_auth_phone', table_name='driver_auth')
    op.drop_table('driver_auth')
    op.add_column('cars', sa.Column('sts', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('cars', 'sts')
    op.create_table('driver_auth',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('auth_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], name='driver_auth_driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='driver_auth_pkey')
    )
    op.create_index('ix_driver_auth_phone', 'driver_auth', ['phone'], unique=False)
    op.create_index('ix_driver_auth_id', 'driver_auth', ['id'], unique=False)
    op.create_table('driver_surveys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('step', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birth_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('driver_license', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('license_issue_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('car_brand', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('car_model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('car_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('car_color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transmission', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('license_plate', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('has_booster', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('has_child_seat', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tariff', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('work_conditions', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('service_types', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], name='driver_surveys_driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='driver_surveys_pkey')
    )
    op.create_index('ix_driver_surveys_id', 'driver_surveys', ['id'], unique=False)
    # ### end Alembic commands ### 